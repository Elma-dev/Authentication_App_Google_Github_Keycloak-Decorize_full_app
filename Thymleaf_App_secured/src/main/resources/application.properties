spring.application.name=customers-app
server.port=8081
#spring.datasource.url=jdbc:h2:mem:customers_db
#spring.h2.console.enabled=true

spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/customers_db?createDatabaseIfNotExist=true}
spring.datasource.username=root
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=create

spring.security.oauth2.client.registration.google.client-id=550734299482-6sdl3ki28gpf5a1n7akdn7plo1977gmg.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.provider.google.user-name-attribute=email

spring.security.oauth2.client.registration.github.client-id=ea35f50036498277e947
spring.security.oauth2.client.registration.github.client-secret=58a5cc2d05fa844ced04b76b81767074c8ccd5b8
spring.security.oauth2.client.provider.github.user-name-attribute=login

spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=${CLIENT_NAME:customers_app}
spring.security.oauth2.client.registration.keycloak.client-secret=TqW4IItBVjYu2fL3E3FO0aQ6FL5gmE77
#53NMXZMSlSXebl0W98XeW6LaMGMzSeax
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=${REDIRECT_URI:http://localhost:8081/login/oauth2/code/ebank_app_ms}
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

spring.security.oauth2.client.provider.keycloak.authorization-uri=${KEYCLOAK_AUTH:http://localhost:8080/realms/auth_apps/protocol/openid-connect/auth}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_AUTH_TOKEN:http://localhost:8080/realms/auth_apps/protocol/openid-connect/token}
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${JWT_JWK_SET_URI:http://localhost:8080/realms/auth_apps/protocol/openid-connect/certs}
#spring.security.oauth2.resourceserver.jwt.issuer-uri=${ISSUER_URI:http://localhost:8080/realms/auth_apps}
#inventory.service.base.uri=${INVENTORY_SERVICE_BASE_URI:http://localhost:8098}

product.service.url=${PRODUCT_SERVICE_URL:http://localhost:8083}